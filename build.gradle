plugins {
    id 'fabric-loom'
    id 'maven-publish'
    id "org.jetbrains.kotlin.jvm"
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

minecraft {
    accessWidener = file("src/main/resources/journia.accesswidener")
}


repositories {
    maven { url = "http://maven.fabricmc.net/" }
    maven {
        name = "TerraformersMC"
        url = "http://maven.terraformersmc.com/"
    }
    maven {
        name = 'CottonMC'
        url = 'http://server.bbkr.space:8081/artifactory/libs-release'
    }
    maven { url = "https://dl.bintray.com/redstoneparadox/mods" }
    maven { url "https://jitpack.io" }
}

dependencies {
    //to change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    modImplementation "net.fabricmc:fabric-language-kotlin:${project.fabric_kotlin}"

    // PSA: Some older mods, compiled on Loom 0.2.1, might have outdated Maven POMs.
    // You may need to force-disable transitiveness on them.
    includeMod "com.terraformersmc.terraform-api:terraform-biome-builder-api-v1:${project.terraform_biome_builder_api_version}"
    includeMod "com.terraformersmc.terraform-api:terraform-dirt-api-v1:${project.terraform_dirt_version}"
    includeMod "com.terraformersmc.terraform-api:terraform-overworld-biome-extensions-api-v1:${project.terraform_overworld_biome_extensions_version}"
    includeMod "com.terraformersmc.terraform-api:terraform-shapes-api-v1:${project.terraform_shapes_api_version}"
    includeMod "com.terraformersmc.terraform-api:terraform-surfaces-api-v1:${project.terraform_surfaces_api_version}"
    includeMod "com.terraformersmc.terraform-api:terraform-tree-api-v1:${project.terraform_tree_api_version}"
    includeMod "com.terraformersmc.terraform-api:terraform-wood-api-v1:${project.terraform_wood_api_version}"

    modApi ("io.github.cottonmc:Jankson-Fabric:${project.jankson}") {
        exclude group: 'net.fabricmc.fabric-api'
    }
    include "io.github.cottonmc:Jankson-Fabric:${project.jankson}"

    modApi("io.github.redstoneparadox:ParadoxConfig:${project.pconfig}") {
        exclude group: 'net.fabricmc.fabric-api'
        exclude group: 'net.fabricmc.fabric-language-kotlin'
    }
    include "io.github.redstoneparadox:ParadoxConfig:${project.pconfig}"
}

def includeMod(String dep) {
    dependencies.modCompile(dep)
    dependencies.include(dep)
}

processResources {
    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand "version": project.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

jar {
    from "LICENSE"
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    // select the repositories you want to publish to
    repositories {
        // uncomment to publish to the local maven
        // mavenLocal()
    }
}

compileKotlin.kotlinOptions.jvmTarget = "1.8"